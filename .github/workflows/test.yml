name: Test

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - uses: actions/cache@v2
        id: cache-venv
        with:
          path: .venv
          key: venv-0
      - run: |
          pip install virtualenv
          virtualenv .venv
          source .venv/bin/activate
          pip install pip setuptools wheel -U
          pip install pre-commit
        if: steps.cache-venv.outputs.cache-hit != 'true'
      - uses: actions/cache@v2
        id: pre-commit-cache
        with:
          path: ~/.cache/pre-commit
          key: key-0
      - run: |
          source .venv/bin/activate
          pre-commit run --all-files

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Load cached Poetry installation
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: poetry-cache-0

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.2.0a2
          virtualenvs-in-project: true

      - name: Load cached venv
        uses: actions/cache@v2
        id: cache-venv
        with:
          path: .venv
          key: ${{ hashFiles('**/poetry.lock') }}-0

      - name: Install dependencies
        run: poetry install --no-interaction --no-root
        if: steps.cache-venv.outputs.cache-hit != 'true'

      - name: Run tests
        run: source $VENV && pytest main_tests.py --cov-report=xml

      - uses: codecov/codecov-action@v2
        with:
          file: ./coverage.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
